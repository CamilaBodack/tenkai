name: Tenkai-Web CI

on: [push, pull_request]

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
      - uses: CultureHQ/actions-yarn@v1.0.1
      - uses: actions/checkout@v2

      - name: Cache node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install
  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
      - uses: CultureHQ/actions-yarn@v1.0.1
      - uses: actions/checkout@v2

      - name: Cache node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: make lint
  build:
    name: Build
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
      - uses: CultureHQ/actions-yarn@v1.0.1
      - uses: actions/checkout@v2

      - name: Cache node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: make build

      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
  dockerize:
    needs: build
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: softplan/tenkai-web
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    if: contains(github.ref, 'refs/heads/master') || contains(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2

      - name: Build the Docker image
        run: make container-image

      - name: Get branch or tag name
        run: |
          export TAG=${GITHUB_REF/refs\/heads\/}
          export TAG=${TAG/refs\/tags\/}

      - name: Tag docker image
        run: make tag-image

      - name: Publish docker image
        run: make publish
